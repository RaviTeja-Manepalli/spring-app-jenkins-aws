pipeline{
 agent any;
 tools{
     maven 'maven'
     jdk 'JDK11'
 }
  stages {
    stage('Maven-Clean'){
      steps{
        sh 'mvn clean'
      }
    }
    stage('Maven-Package'){
        steps{
        sh 'mvn package'
        }
    }
    
  }
  post{
      success{
          rtUpload (
            serverId: 'ARTIFACTORY_SERVER',
            spec: '''{
                 "files": [
                             {
                                "pattern": "target/*.jar",
                                "target": "art-doc-dev-loc/mindsapp/"
                            }
                        ]
            }''',
            )

          rtDownload (
                 serverId: "ARTIFACTORY_SERVER",
                spec:"""{
                     "files": [
                                {
                                    "pattern": "art-doc-dev-loc/mindsapp/**",
                                    "target": "artifacts/"      
                                }
                            ]
              }"""
            )
          sshagent(['20c7b532-4b27-48e5-8d94-efc415f57aca']){
                    sh 'scp -r /var/jenkins_home/workspace/mindsapp-spring/artifacts/mindsapp/*.jar ubuntu@3.135.63.62:/home/ubuntu/artifacts/'
          }

          withAWS(region:'us-east-2',credentials:'70be04d1-2159-4bd2-bf81-ad29e92c201e') {
                    s3Upload(file:'artifacts/mindsapp/', bucket:'jenkinssujjadbucket', path:'artifacts/')
          }

          mail to: 'efskwgkkwhae@inilogic.com', from: 'commonteesta@gmail.com',
              subject: "Example Build: ${env.JOB_NAME} - success", 
              body: "Job success - \"${env.JOB_NAME}\" build: ${env.BUILD_NUMBER}\n\nView the log at:\n ${env.BUILD_URL}"

      }
      failure {
            mail to: 'efskwgkkwhae@inilogic.com', from: 'commonteesta@gmail.com',
                subject: "Example Build: ${env.JOB_NAME} - failed", 
                body: "Job failed - \"${env.JOB_NAME}\" build: ${env.BUILD_NUMBER}\n\nView the log at:\n ${env.BUILD_URL}"

        }

  }
}
